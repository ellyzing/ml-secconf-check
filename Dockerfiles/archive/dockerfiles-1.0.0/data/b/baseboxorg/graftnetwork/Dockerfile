# Multistage docker build, requires docker 17.05  
# builder stage  
FROM ubuntu:16.04 as builder  
  
RUN apt-get update && \  
apt-get --no-install-recommends --yes install \  
ca-certificates \  
cmake \  
g++ \  
make \  
pkg-config \  
graphviz \  
doxygen \  
git \  
curl \  
libtool-bin \  
autoconf \  
automake \  
libunbound-dev \  
libminiupnpc-dev \  
libldns-dev \  
libboost-all-dev  
  
WORKDIR /usr/local  
  
# OpenSSL  
ARG OPENSSL_VERSION=1.0.2n  
ARG
OPENSSL_HASH=370babb75f278c39e0c50e8c4e7493bc0f18db6867478341a832a982fd15a8fe  
RUN curl -s -O
https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \  
&& echo "${OPENSSL_HASH} openssl-${OPENSSL_VERSION}.tar.gz" | sha256sum -c \  
&& tar -xzf openssl-${OPENSSL_VERSION}.tar.gz \  
&& cd openssl-${OPENSSL_VERSION} \  
&& ./Configure linux-x86_64 no-shared --static -fPIC \  
&& make build_crypto build_ssl \  
&& make install  
ENV OPENSSL_ROOT_DIR=/usr/local/openssl-${OPENSSL_VERSION}  
  
# Readline  
ARG READLINE_VERSION=7.0  
ARG
READLINE_HASH=750d437185286f40a369e1e4f4764eda932b9459b5ec9a731628393dd3d32334  
RUN curl -s -O
https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}.tar.gz \  
&& echo "${READLINE_HASH} readline-${READLINE_VERSION}.tar.gz" | sha256sum -c
\  
&& tar -xzf readline-${READLINE_VERSION}.tar.gz \  
&& cd readline-${READLINE_VERSION} \  
&& CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure \  
&& make \  
&& make install  
  
WORKDIR /src  
COPY . .  
  
ARG NPROC  
RUN rm -rf build && \  
if [ -z "$NPROC" ];then make -j$(nproc) release-static;else make -j$NPROC
release-static;fi  
  
# runtime stage  
FROM ubuntu:16.04  
RUN apt-get update && \  
apt-get --no-install-recommends --yes install ca-certificates && \  
apt-get clean && \  
rm -rf /var/lib/apt  
  
COPY \--from=builder /src/build/release/bin/* /usr/local/bin/  
  
# Contains the blockchain  
VOLUME /root/.graft  
  
# Generate your wallet via accessing the container and run:  
# cd /wallet  
# graft-wallet-cli  
VOLUME /wallet  
  
ENV LOG_LEVEL 0  
ENV P2P_BIND_IP 0.0.0.0  
ENV P2P_BIND_PORT 18080  
ENV RPC_BIND_IP 127.0.0.1  
ENV RPC_BIND_PORT 18081  
EXPOSE 18080  
EXPOSE 18081  
CMD graftnoded --log-level=$LOG_LEVEL \--p2p-bind-ip=$P2P_BIND_IP \--p2p-bind-
port=$P2P_BIND_PORT \--rpc-bind-ip=$RPC_BIND_IP \--rpc-bind-
port=$RPC_BIND_PORT  

