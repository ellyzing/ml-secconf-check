# https://github.com/docker-library/postgres/blob/master/10/alpine/Dockerfile  
FROM postgres:10.3-alpine  
  
MAINTAINER Ivan Muratov, binakot@gmail.com  
  
# https://postgis.net/docs/manual-2.4/postgis_installation.html  
ENV POSTGIS_VERSION 2.4.4  
ENV POSTGIS_SHA256
0dff4902556ad45430e2b85dbe7e9baa758c6eb0bfd5ff6948f478beddd56b67  
RUN set -ex \  
\  
&& apk add --no-cache --virtual .fetch-deps \  
ca-certificates \  
openssl \  
tar \  
\  
&& wget -O postgis.tar.gz
"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz" \  
&& echo "$POSTGIS_SHA256 *postgis.tar.gz" | sha256sum -c - \  
&& mkdir -p /usr/src/postgis \  
&& tar \  
\--extract \  
\--file postgis.tar.gz \  
\--directory /usr/src/postgis \  
\--strip-components 1 \  
&& rm postgis.tar.gz \  
\  
&& apk add --no-cache --virtual .build-deps \  
autoconf \  
automake \  
g++ \  
json-c-dev \  
libtool \  
libxml2-dev \  
make \  
perl \  
\  
&& apk add --no-cache --virtual .build-deps-testing \  
\--repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \  
gdal-dev \  
geos-dev \  
proj4-dev \  
&& cd /usr/src/postgis \  
&& ./autogen.sh \  
&& ./configure \  
&& make \  
&& make install \  
&& apk add --no-cache --virtual .postgis-rundeps \  
json-c \  
&& apk add --no-cache --virtual .postgis-rundeps-testing \  
\--repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \  
geos \  
gdal \  
proj4 \  
&& cd / \  
&& rm -rf /usr/src/postgis \  
&& apk del .fetch-deps .build-deps .build-deps-testing  
  
# http://docs.timescale.com/latest/getting-
started/installation/linux/installation-source  
ENV TIMESCALEDB_VERSION 0.9.1  
ENV TIMESCALEDB_SHA256
f58505cceb87142cec4e72475d8a7fe08921322c90bd4ea7e1d59e5d8ab5dc77  
RUN set -ex \  
&& apk add --no-cache --virtual .fetch-deps \  
ca-certificates \  
openssl \  
tar \  
&& wget -O timescaledb.tar.gz
"https://github.com/timescale/timescaledb/archive/$TIMESCALEDB_VERSION.tar.gz"
\  
&& echo "$TIMESCALEDB_SHA256 *timescaledb.tar.gz" | sha256sum -c - \  
&& mkdir -p /usr/src/timescaledb \  
&& tar \  
\--extract \  
\--file timescaledb.tar.gz \  
\--directory /usr/src/timescaledb \  
\--strip-components 1 \  
&& rm timescaledb.tar.gz \  
\  
&& apk add --no-cache --virtual .build-deps \  
coreutils \  
dpkg-dev dpkg \  
gcc \  
libc-dev \  
make \  
util-linux-dev \  
cmake \  
\  
&& cd /usr/src/timescaledb \  
&& ./bootstrap \  
&& cd ./build \  
&& make \  
&& make install \  
\  
&& cd / \  
&& rm -rf /usr/src/timescaledb \  
&& apk del .fetch-deps .build-deps \  
&& sed -r -i "s/[#]*\s*(shared_preload_libraries)\s*=\s*'(.*)'/\1 =
'timescaledb,\2'/;s/,'/'/" /usr/local/share/postgresql/postgresql.conf.sample  
  
COPY ./init-postgis.sh /docker-entrypoint-initdb.d/1.postgis.sh  
COPY ./init-timescaledb.sh /docker-entrypoint-initdb.d/2.timescaledb.sh  
COPY ./init-postgres.sh /docker-entrypoint-initdb.d/3.postgres.sh  

