FROM alpine:3.6  
LABEL maintainer "https://github.com/blacktop"  
  
RUN apk add --no-cache openjdk8-jre su-exec  
  
ENV VERSION 6.0.0  
ENV DOWNLOAD_URL "https://artifacts.elastic.co/downloads/elasticsearch"  
ENV ES_TARBAL "${DOWNLOAD_URL}/elasticsearch-${VERSION}.tar.gz"  
ENV ES_TARBALL_ASC "${DOWNLOAD_URL}/elasticsearch-${VERSION}.tar.gz.asc"  
ENV EXPECTED_SHA_URL "${DOWNLOAD_URL}/elasticsearch-${VERSION}.tar.gz.sha512"  
ENV ES_TARBALL_SHA
"ec0ab309aa878ffd3b7f00388b2a837f971ff479395928cd52eac7fb8d27056bc487d1b440fcb9e27c12aa681ec7b39d7254162c617e5f81b8a9ca5b1d5ff3e5
elasticsearch-6.0.0-rc2.tar.gz"  
ENV GPG_KEY "46095ACC8548582C1A2699A9D27D666CD88E42B4"  
RUN apk add --no-cache bash  
RUN apk add --no-cache -t .build-deps wget ca-certificates gnupg openssl \  
&& cd /tmp \  
&& echo "===> Install Elasticsearch..." \  
&& wget --progress=bar:force -O elasticsearch.tar.gz "$ES_TARBAL"; \  
if [ "$ES_TARBALL_SHA" ]; then \  
echo "$ES_TARBALL_SHA *elasticsearch.tar.gz" | sha512sum -c -; \  
fi; \  
if [ "$ES_TARBALL_ASC" ]; then \  
wget --progress=bar:force -O elasticsearch.tar.gz.asc "$ES_TARBALL_ASC"; \  
export GNUPGHOME="$(mktemp -d)"; \  
gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"; \  
gpg --batch --verify elasticsearch.tar.gz.asc elasticsearch.tar.gz; \  
rm -r "$GNUPGHOME" elasticsearch.tar.gz.asc; \  
fi; \  
tar -xf elasticsearch.tar.gz \  
&& ls -lah \  
&& mv elasticsearch-$VERSION /usr/share/elasticsearch \  
&& adduser -D -h /usr/share/elasticsearch elasticsearch \  
&& echo "===> Creating Elasticsearch Paths..." \  
&& for path in \  
/usr/share/elasticsearch/data \  
/usr/share/elasticsearch/logs \  
/usr/share/elasticsearch/config \  
/usr/share/elasticsearch/config/scripts \  
/usr/share/elasticsearch/plugins \  
; do \  
mkdir -p "$path"; \  
chown -R elasticsearch:elasticsearch "$path"; \  
done \  
&& rm -rf /tmp/* \  
&& apk del --purge .build-deps  
  
COPY config/elastic /usr/share/elasticsearch/config  
COPY config/logrotate /etc/logrotate.d/elasticsearch  
COPY elastic-entrypoint.sh /  
COPY docker-healthcheck /usr/local/bin/  
  
WORKDIR /usr/share/elasticsearch  
  
ENV PATH /usr/share/elasticsearch/bin:$PATH  
  
VOLUME ["/usr/share/elasticsearch/data"]  
  
EXPOSE 9200 9300  
ENTRYPOINT ["/elastic-entrypoint.sh"]  
CMD ["elasticsearch"]  
  
# HEALTHCHECK CMD ["docker-healthcheck"]  

